<script type="text/javascript">
  // TODO: handle form validation!

  function addHttp(url) {
    if (url != "" && !/^(f|ht)tps?:\/\//i.test(url)) {
        url = "http://" + url;
     }
     return url;
  }

  function handleSubmit(form) {
    var document_url = addHttp(form.elements['document_url'].value);
    var launchUrl = '{{ lti_launch_url }}' + '?url=' + document_url;
    var contentItem = {
      '@context': 'http://purl.imsglobal.org/ctx/lti/v1/ContentItem',
      '@graph': [
        {
          '@type': 'LtiLinkItem',
          mediaType: 'application/vnd.ims.lti.v1.ltilink',
          url: launchUrl,
        },
      ]
    }
    form.elements['content_items'].value = JSON.stringify(contentItem)
  }


/////// Google Picker /////////
      // The Browser API key obtained from the Google API Console.
      var developerKey = '{{ google_developer_key }}';

      // The Client ID obtained from the Google API Console. Replace with your own Client ID.
      var clientId = '{{ google_client_id }}';

    // Replace with your own project number from console.developers.google.com.
    // See "Project number" under "IAM & Admin" > "Settings"
    var appId = '{{ google_app_id }}';

    // Scope to use to access user's Drive items.
    var scope = ['https://www.googleapis.com/auth/drive'];

    var pickerApiLoaded = false;
    var oauthToken;

    // Use the Google API Loader script to load the google.picker script.
    function loadPicker() {
      gapi.load('auth', {'callback': onAuthApiLoad});
      gapi.load('picker', {'callback': onPickerApiLoad});
    }

    function onAuthApiLoad() {
      window.gapi.auth.authorize(
          {
            'client_id': clientId,
            'scope': scope,
            'immediate': false
          },
          handleAuthResult);
    }

    function onPickerApiLoad() {
      pickerApiLoaded = true;
      createPicker();
    }

    function handleAuthResult(authResult) {
      if (authResult && !authResult.error) {
        oauthToken = authResult.access_token;
        createPicker();
      }
    }

    // Create and render a Picker object for searching images.
    function createPicker() {
      if (pickerApiLoaded && oauthToken) {
        var view = new google.picker.View(google.picker.ViewId.DOCS);
        //view.setMimeTypes("image/png,image/jpeg,image/jpg");
        var picker = new google.picker.PickerBuilder()
//            .enableFeature(google.picker.Feature.NAV_HIDDEN)
            .enableFeature(google.picker.Feature.MULTISELECT_ENABLED)
            .setAppId(appId)
//TODO look up host url from lti key
            .setOrigin('{{lms_url}}')
            .setOAuthToken(oauthToken)
            .addView(view)
            .addView(new google.picker.DocsUploadView())
            .setDeveloperKey(developerKey)
            .setCallback(pickerCallback)
            .build();
         picker.setVisible(true);
      }
    }

   function docUrl(doc) {
     return 'https://docs.google.com/document/d/'
       + doc.id
       + '/export?format=pdf';
   }

// TODO why 500?
// TODO use api to update file permissions on upload
    function pickerCallback(data) {
      var docCount = data.docs && data.docs.length;
      if (data.action == google.picker.Action.PICKED && docCount === 1) {
        var url = docUrl(data.docs[0]);
        document.getElementById('launch-form').elements['document_url'].value = url;
      }
    }

</script>
 <script type="text/javascript" src="https://apis.google.com/js/api.js?onload=loadPicker"></script>

<form id="launch-form" action="{{ content_item_return_url  }}" method="post" onsubmit="handleSubmit(this)" enctype="application/x-www-form-urlencoded">
  <input type="hidden" value="" name="content_items" />
  {% for field in form_fields.keys() %}
    <input type="hidden" value="{{ form_fields[field] }}" name="{{ field }}" />
  {% endfor %}
    <label for="document_url">Public Document URL</label>
    <input type="text" name="document_url" />
  <button type="submit">Submit</button>
</form>
